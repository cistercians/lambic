// This is the clean, simplified work and idle mode for SerfM
// Replace lines 4062-4999 in Entity.js with this code:

    // ==================== WORK MODE ====================
    if(self.mode == 'work' && self.hut && Building.list[self.hut]){
      var hut = Building.list[self.hut];
      
      // Priority 1: Build hut if not built
      if(!hut.built){
        var foundationTiles = hut.plot.filter(p => getTile(0, p[0], p[1]) == 11);
        if(foundationTiles.length > 0){
          if(!self.work.spot) self.work.spot = foundationTiles[Math.floor(Math.random() * foundationTiles.length)];
          if(loc.toString() == self.work.spot.toString()){
            if(!self.building) Build(self.id);
          } else if(!self.path){
            self.moveTo(0, self.work.spot[0], self.work.spot[1]);
          }
        }
      }
      // Priority 2: Do economic work once hut is built  
      else if(self.work.hq && Building.list[self.work.hq]){
        if(!self.work.spot){
          var hq = Building.list[self.work.hq];
          if(hq.resources && hq.resources.length > 0){
            self.work.spot = hq.resources[Math.floor(Math.random() * hq.resources.length)];
          }
        }
        if(self.work.spot && loc.toString() != self.work.spot.toString() && !self.path){
          self.moveTo(0, self.work.spot[0], self.work.spot[1]);
        }
      }
      // Priority 3: Find work if no assignment
      else if(!self.work.hq){
        self.assignWorkHQ();
      }
    }
    
    // ==================== IDLE MODE ====================
    else if(self.mode == 'idle'){
      if(!self.action && self.home){
        var cHome = getCenter(self.home.loc[0], self.home.loc[1]);
        var hDist = self.getDistance({x:cHome[0], y:cHome[1]});
        
        if(hDist > self.wanderRange){
          if(!self.path) self.return();
        } else if(self.idleTime == 0 && !self.path){
          var col = loc[0], row = loc[1];
          var select = [[col,row-1],[col-1,row],[col,row+1],[col+1,row]];
          var target = select[Math.floor(Math.random() * 4)];
          if(target[0] >= 0 && target[0] < mapSize && target[1] >= 0 && target[1] < mapSize){
            if(isWalkable(self.z, target[0], target[1])){
              self.move(target);
              self.idleTime = Math.floor(Math.random() * self.idleRange);
            }
          }
        }
      }
    }

